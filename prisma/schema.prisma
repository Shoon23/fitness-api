// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  first_name   String
  last_name    String
  email        String        @unique @db.VarChar(191)
  password     String
  created_at   DateTime      @default(now())
  update_at    DateTime      @updatedAt
  workout_plan WorkoutPlan[]
  preference   Preference?
}

model Preference {
  id         String            @id @default(uuid())
  user       User              @relation(fields: [user_id], references: [id])
  user_id    String            @unique
  levels     PreferLevel[]
  muscles    PreferMuscle[]
  equipments PreferEquipment[]
}

model PreferLevel {
  id            String      @id @default(uuid())
  preference    Preference? @relation(fields: [preference_id], references: [id])
  name          String
  preference_id String?
}

model PreferMuscle {
  id            String      @id @default(uuid())
  preference    Preference? @relation(fields: [preference_id], references: [id])
  name          String
  preference_id String?
}

model PreferEquipment {
  id            String      @id @default(uuid())
  preference    Preference? @relation(fields: [preference_id], references: [id])
  name          String
  preference_id String?
}

model WorkoutPlan {
  id         String       @id @default(uuid())
  user       User         @relation(fields: [user_id], references: [id])
  user_id    String
  workouts   WorkoutDay[]
  created_at DateTime     @default(now())
  update_at  DateTime     @updatedAt
  is_active  Boolean      @default(false)
  name       String
}

model WorkoutDay {
  id              String      @id @default(uuid())
  day             Day
  exercises       Exercise[]
  workout         WorkoutPlan @relation(fields: [workout_plan_id], references: [id], onDelete: Cascade)
  workout_plan_id String
}

enum Day {
  Monday
  Tuesday
  Wednesday
  Thursday
  Friday
  Saturday
  Sunday
}

model Exercise {
  id             String     @id @default(uuid())
  workout        WorkoutDay @relation(fields: [workout_day_id], references: [id], onDelete: Cascade)
  workout_day_id String
  reps           Int
  sets           Int
  detail_id      String
}
